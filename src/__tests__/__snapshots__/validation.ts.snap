// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@is as parameter decorator 1`] = `
Map {
  2 => Object {
    "converter": [Function],
    "validationSchema": undefined,
    "validatorFactory": undefined,
    "validators": Array [
      [Function],
    ],
  },
  1 => Object {
    "converter": [Function],
    "validationSchema": undefined,
    "validatorFactory": undefined,
    "validators": Array [],
  },
  0 => Object {
    "converter": [Function],
    "validationSchema": undefined,
    "validatorFactory": undefined,
    "validators": Array [],
  },
}
`;

exports[`@is as property decorator 1`] = `
Object {
  "converter": [Function],
  "validationSchema": undefined,
  "validatorFactory": undefined,
  "validators": Array [
    [Function],
    [Function],
  ],
}
`;

exports[`@is as property decorator 2`] = `
Object {
  "converter": [Function],
  "validationSchema": undefined,
  "validatorFactory": undefined,
  "validators": Array [
    [Function],
    [Function],
  ],
}
`;

exports[`The test schema detects a invalid input as invalid 1`] = `
Processed {
  "nested": Object {
    "a": Processed {
      "errors": Array [
        "Not a valid integer.",
      ],
    },
    "d": Processed {
      "errors": Array [
        "Unexpected key.",
      ],
    },
  },
}
`;

exports[`The test schema detects a invalid input as invalid 2`] = `
Processed {
  "nested": Object {
    "a": Processed {
      "errors": Array [
        "Not a valid integer.",
      ],
    },
  },
}
`;

exports[`The test schema detects a invalid input as invalid 3`] = `
Processed {
  "nested": Object {
    "a": Processed {
      "errors": Array [
        "Not one of (1, 2, 3, 4).",
      ],
      "value": 19,
    },
    "b": Processed {
      "nested": Object {
        "c": Processed {
          "errors": Array [
            "Not a valid integer.",
          ],
        },
      },
    },
    "d": Processed {
      "errors": Array [
        "Missing required field.",
      ],
    },
  },
}
`;

exports[`The test schema detects a invalid input as invalid 4`] = `
Processed {
  "nested": Object {
    "d": Processed {
      "errors": Array [
        "Missing required field.",
      ],
    },
  },
}
`;
